@model Postworthy.Web.Bot.Models.DashboardModel

<style>
    body
    {
        /*font: 10px sans-serif; */
    }

    .axis path,
    .axis line
    {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .x.axis path
    {
        display: none;
    }

    .line
    {
        fill: none;
        stroke: steelblue;
        stroke-width: 1.5px;
    }
</style>
<script src="/Content/vendors/jquery-1.9.1.min.js"></script>
<script src="/Content/bootstrap/js/bootstrap.min.js"></script>
<script src="/Content/vendors/flot/jquery.flot.js"></script>
<script src="/Content/vendors/flot/jquery.flot.categories.js"></script>

<script src="/Scripts/d3.v3.min.js"></script>

@Html.Partial("_TopMenu")

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span9" id="content">

            <div class="row-fluid">
                <!-- block -->
                <div class="block">
                    <div class="navbar navbar-inner block-header">
                        <div class="muted pull-left">Bar Chart</div>
                        <div class="pull-right">
                            <span class="badge badge-warning">View More</span>

                        </div>
                    </div>
                    <div class="block-content collapse in">
                        <div class="span12">
                            <div id="catchart" style="width: 100%; height: 300px"></div>
                        </div>
                    </div>
                </div>
                <!-- /block -->
            </div>


          @*  <div id="bodychart">
            </div>*@
        </div>
        <!-- /block -->
    </div>

</div>

<script>

$(function() {
    var data = [ ["January", 10], ["February", 8], ["March", 4], ["April", 13], ["May", 17], ["June", 9] ];

    $.plot("#catchart", [ data ], {
        series: {
            bars: {
                show: true,
                barWidth: 0.6,
                align: "center"
            }
        },
        xaxis: {
            mode: "categories",
            tickLength: 0
        }
    });

    var data = [],
    series = Math.floor(Math.random() * 6) + 3;

    for (var i = 0; i < series; i++) {
        data[i] = {
            label: "Series" + (i + 1),
            data: Math.floor(Math.random() * 100) + 1
        }
    }

});

    //var margin = { top: 20, right: 80, bottom: 30, left: 50 },
    //    width = 960 - margin.left - margin.right,
    //    height = 500 - margin.top - margin.bottom;

    //var parseDate = d3.time.format("%Y%m%d").parse;

    //var x = d3.time.scale()
    //    .range([0, width]);

    //var y = d3.scale.linear()
    //    .range([height, 0]);

    //var color = d3.scale.category10();

    //var xAxis = d3.svg.axis()
    //    .scale(x)
    //    .orient("bottom");

    //var yAxis = d3.svg.axis()
    //    .scale(y)
    //    .orient("left");

    //var line = d3.svg.line()
    //    .interpolate("basis")
    //    .x(function (d) { return x(d.date); })
    //    .y(function (d) { return y(d.temperature); });

    //var svg = d3.select("body").append("svg")
    //    .attr("width", width + margin.left + margin.right)
    //    .attr("height", height + margin.top + margin.bottom)
    //  .append("g")
    //    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    //d3.tsv("/data.tsv", function (error, data) {
    //    color.domain(d3.keys(data[0]).filter(function (key) { return key !== "date"; }));

    //    data.forEach(function (d) {
    //        d.date = parseDate(d.date);
    //    });

    //    var cities = color.domain().map(function (name) {
    //        return {
    //            name: name,
    //            values: data.map(function (d) {
    //                return { date: d.date, temperature: +d[name] };
    //            })
    //        };
    //    });

    //    x.domain(d3.extent(data, function (d) { return d.date; }));

    //    y.domain([
    //      d3.min(cities, function (c) { return d3.min(c.values, function (v) { return v.temperature; }); }),
    //      d3.max(cities, function (c) { return d3.max(c.values, function (v) { return v.temperature; }); })
    //    ]);

    //    svg.append("g")
    //        .attr("class", "x axis")
    //        .attr("transform", "translate(0," + height + ")")
    //        .call(xAxis);

    //    svg.append("g")
    //        .attr("class", "y axis")
    //        .call(yAxis)
    //      .append("text")
    //        .attr("transform", "rotate(-90)")
    //        .attr("y", 6)
    //        .attr("dy", ".71em")
    //        .style("text-anchor", "end")
    //        .text("Temperature (ºF)");

    //    var city = svg.selectAll(".city")
    //        .data(cities)
    //      .enter().append("g")
    //        .attr("class", "city");

    //    city.append("path")
    //        .attr("class", "line")
    //        .attr("d", function (d) { return line(d.values); })
    //        .style("stroke", function (d) { return color(d.name); });

    //    city.append("text")
    //        .datum(function (d) { return { name: d.name, value: d.values[d.values.length - 1] }; })
    //        .attr("transform", function (d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
    //        .attr("x", 3)
    //        .attr("dy", ".35em")
    //        .text(function (d) { return d.name; });
    //});

</script>
